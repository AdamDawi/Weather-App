package com.example.weatherapp.common

import com.example.weatherapp.data.remote.dto.Current
import com.example.weatherapp.data.remote.dto.CurrentUnits
import com.example.weatherapp.data.remote.dto.Daily
import com.example.weatherapp.data.remote.dto.DailyUnits
import com.example.weatherapp.data.remote.dto.Hourly
import com.example.weatherapp.data.remote.dto.HourlyUnits
import com.example.weatherapp.data.remote.dto.WeatherDto

val mockCurrent = Current(
    interval = 900,
    time = "2024-06-08T19:15",
    temperature_2m = 19.1,
    is_day = 1,
    rain = 0.0,
    wind_speed_10m = 2.3,
    cloud_cover = 77.0,
    weather_code = 3,
    relative_humidity_2m = 61.0
)
val mockCurrentUnits = CurrentUnits(
    temperature_2m = "째C",
    rain = "mm",
    wind_speed_10m = "km/h",
    time = "iso8601",
    interval = "seconds",
    is_day = "",
    cloud_cover = "%",
    weather_code = "wmo code",
    relative_humidity_2m = "%"
)

val mockDaily = Daily(
    time = listOf(
        "2024-06-13",
        "2024-06-14",
        "2024-06-15",
        "2024-06-16",
        "2024-06-17",
        "2024-06-18",
        "2024-06-19"
    ),
    weather_code = listOf(61, 61, 3, 3, 3, 3, 3),
    temperature_2m_max = listOf(17.6, 20.0, 26.0, 24.7, 25.8, 28.3, 31.3),
    temperature_2m_min = listOf(10.8, 9.1, 10.7, 12.2, 15.7, 14.1, 16.2),
    sunrise = listOf(
        "2024-06-13T02:06",
        "2024-06-14T02:06",
        "2024-06-15T02:05",
        "2024-06-16T02:05",
        "2024-06-17T02:05",
        "2024-06-18T02:05",
        "2024-06-19T02:06"),
    sunset = listOf(
        "2024-06-13T18:47",
        "2024-06-14T18:47",
        "2024-06-15T18:48",
        "2024-06-16T18:48",
        "2024-06-17T18:49",
        "2024-06-18T18:49",
        "2024-06-19T18:49"
    )
)

val mockDailyUnits = DailyUnits(
    time = "iso8601",
    weather_code = "wmo code",
    temperature_2m_max = "째C",
    temperature_2m_min = "째C",
    sunrise = "iso8601",
    sunset = "iso8601"
)

val mockHourly = Hourly(
    time = listOf(
        "2024-06-21T00:00","2024-06-21T01:00","2024-06-21T02:00","2024-06-21T03:00","2024-06-21T04:00","2024-06-21T05:00","2024-06-21T06:00","2024-06-21T07:00","2024-06-21T08:00","2024-06-21T09:00","2024-06-21T10:00","2024-06-21T11:00","2024-06-21T12:00","2024-06-21T13:00","2024-06-21T14:00","2024-06-21T15:00","2024-06-21T16:00","2024-06-21T17:00","2024-06-21T18:00","2024-06-21T19:00","2024-06-21T20:00","2024-06-21T21:00","2024-06-21T22:00","2024-06-21T23:00","2024-06-22T00:00","2024-06-22T01:00","2024-06-22T02:00","2024-06-22T03:00","2024-06-22T04:00","2024-06-22T05:00","2024-06-22T06:00","2024-06-22T07:00","2024-06-22T08:00","2024-06-22T09:00","2024-06-22T10:00","2024-06-22T11:00","2024-06-22T12:00","2024-06-22T13:00","2024-06-22T14:00","2024-06-22T15:00","2024-06-22T16:00","2024-06-22T17:00","2024-06-22T18:00","2024-06-22T19:00","2024-06-22T20:00","2024-06-22T21:00","2024-06-22T22:00","2024-06-22T23:00","2024-06-23T00:00","2024-06-23T01:00","2024-06-23T02:00","2024-06-23T03:00","2024-06-23T04:00","2024-06-23T05:00","2024-06-23T06:00","2024-06-23T07:00","2024-06-23T08:00","2024-06-23T09:00","2024-06-23T10:00","2024-06-23T11:00","2024-06-23T12:00","2024-06-23T13:00","2024-06-23T14:00","2024-06-23T15:00","2024-06-23T16:00","2024-06-23T17:00","2024-06-23T18:00","2024-06-23T19:00","2024-06-23T20:00","2024-06-23T21:00","2024-06-23T22:00","2024-06-23T23:00","2024-06-24T00:00","2024-06-24T01:00","2024-06-24T02:00","2024-06-24T03:00","2024-06-24T04:00","2024-06-24T05:00","2024-06-24T06:00","2024-06-24T07:00","2024-06-24T08:00","2024-06-24T09:00","2024-06-24T10:00","2024-06-24T11:00","2024-06-24T12:00","2024-06-24T13:00","2024-06-24T14:00","2024-06-24T15:00","2024-06-24T16:00","2024-06-24T17:00","2024-06-24T18:00","2024-06-24T19:00","2024-06-24T20:00","2024-06-24T21:00","2024-06-24T22:00","2024-06-24T23:00","2024-06-25T00:00","2024-06-25T01:00","2024-06-25T02:00","2024-06-25T03:00","2024-06-25T04:00","2024-06-25T05:00","2024-06-25T06:00","2024-06-25T07:00","2024-06-25T08:00","2024-06-25T09:00","2024-06-25T10:00","2024-06-25T11:00","2024-06-25T12:00","2024-06-25T13:00","2024-06-25T14:00","2024-06-25T15:00","2024-06-25T16:00","2024-06-25T17:00","2024-06-25T18:00","2024-06-25T19:00","2024-06-25T20:00","2024-06-25T21:00","2024-06-25T22:00","2024-06-25T23:00","2024-06-26T00:00","2024-06-26T01:00","2024-06-26T02:00","2024-06-26T03:00","2024-06-26T04:00","2024-06-26T05:00","2024-06-26T06:00","2024-06-26T07:00","2024-06-26T08:00","2024-06-26T09:00","2024-06-26T10:00","2024-06-26T11:00","2024-06-26T12:00","2024-06-26T13:00","2024-06-26T14:00","2024-06-26T15:00","2024-06-26T16:00","2024-06-26T17:00","2024-06-26T18:00","2024-06-26T19:00","2024-06-26T20:00","2024-06-26T21:00","2024-06-26T22:00","2024-06-26T23:00","2024-06-27T00:00","2024-06-27T01:00","2024-06-27T02:00","2024-06-27T03:00","2024-06-27T04:00","2024-06-27T05:00","2024-06-27T06:00","2024-06-27T07:00","2024-06-27T08:00","2024-06-27T09:00","2024-06-27T10:00","2024-06-27T11:00","2024-06-27T12:00","2024-06-27T13:00","2024-06-27T14:00","2024-06-27T15:00","2024-06-27T16:00","2024-06-27T17:00","2024-06-27T18:00","2024-06-27T19:00","2024-06-27T20:00","2024-06-27T21:00","2024-06-27T22:00","2024-06-27T23:00","2024-06-28T00:00","2024-06-28T01:00","2024-06-28T02:00","2024-06-28T03:00","2024-06-28T04:00","2024-06-28T05:00","2024-06-28T06:00","2024-06-28T07:00","2024-06-28T08:00","2024-06-28T09:00","2024-06-28T10:00","2024-06-28T11:00","2024-06-28T12:00","2024-06-28T13:00","2024-06-28T14:00","2024-06-28T15:00","2024-06-28T16:00","2024-06-28T17:00","2024-06-28T18:00","2024-06-28T19:00","2024-06-28T20:00","2024-06-28T21:00","2024-06-28T22:00","2024-06-28T23:00","2024-06-29T00:00","2024-06-29T01:00","2024-06-29T02:00","2024-06-29T03:00","2024-06-29T04:00","2024-06-29T05:00","2024-06-29T06:00","2024-06-29T07:00","2024-06-29T08:00","2024-06-29T09:00","2024-06-29T10:00","2024-06-29T11:00","2024-06-29T12:00","2024-06-29T13:00","2024-06-29T14:00","2024-06-29T15:00","2024-06-29T16:00","2024-06-29T17:00","2024-06-29T18:00","2024-06-29T19:00","2024-06-29T20:00","2024-06-29T21:00","2024-06-29T22:00","2024-06-29T23:00"
    ),
    temperature_2m = listOf(10.2,9.9,9.5,9.6,12.0,15.3,18.5,20.4,21.7,22.8,23.7,24.5,25.3,25.8,25.9,25.9,25.6,24.7,22.8,21.0,19.8,17.3,16.4,16.1,15.4,15.3,15.4,15.7,17.2,18.6,20.4,21.7,22.3,21.1,21.8,24.6,24.5,25.7,25.0,23.2,23.0,22.7,21.7,20.2,19.2,18.5,18.2,17.3,16.4,15.8,14.9,14.4,15.1,16.3,17.9,19.5,20.7,21.9,23.1,23.9,23.8,24.2,23.9,21.6,20.8,20.6,19.5,17.7,17.3,16.8,16.3,16.0,15.7,15.4,15.2,15.3,15.4,15.5,15.8,16.4,17.1,17.7,18.0,18.5,18.4,19.3,18.7,19.3,19.4,19.3,18.5,17.5,16.6,15.9,15.3,15.1,14.8,14.3,13.9,13.9,15.8,17.9,19.7,21.2,22.3,23.5,24.5,25.5,26.5,26.8,27.1,26.9,26.3,25.3,22.9,20.0,18.4,17.3,16.8,16.5,16.1,15.5,15.1,15.2,16.8,19.4,21.8,23.9,25.6,26.9,27.5,28.4,28.7,29.0,29.0,28.6,27.7,26.4,24.9,23.1,21.0,19.4,18.7,18.5,18.2,17.7,17.1,17.2,18.1,19.5,21.1,23.0,25.1,26.8,28.0,28.8,29.4,29.7,29.7,29.3,28.3,26.9,25.3,23.3,21.1,19.2,18.1,17.3,16.8,16.1,15.6,16.1,18.2,21.3,23.5,24.2,26.0,27.5,28.7,29.6,30.1,30.4,30.3,29.8,28.7,27.2,25.7,24.3,22.8,21.4,20.1,19.0,18.0,17.1,16.3,16.5,18.4,21.2,23.9,26.1,28.1,29.7,30.7,31.2,31.6,31.8,31.9,31.5,30.4,28.8,27.2,25.3,23.4,21.7,20.7,20.0),
    relative_humidity_2m = listOf(75, 76, 77, 84, 83, 78, 65, 64, 57, 54, 52, 63, 72, 77, 80, 83, 88, 89, 89, 90, 92, 92, 92, 91),
    weather_code = listOf(2, 3, 3, 2, 2, 3, 2, 3, 3, 3, 3, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61),
    wind_speed_10m = listOf(5.1, 4.6, 4.7, 4.5, 4.2, 5.2, 6.2, 5.4, 4.2, 1.9, 1.0, 6.1, 8.7, 8.7, 8.4, 6.0, 7.6, 8.6, 7.2, 5.9, 7.1, 8.6, 8.7, 8.6)
)

val mockHourlyUnits = HourlyUnits(
    time = "iso8601",
    temperature_2m = "째C",
    relative_humidity_2m = "%",
    weather_code = "wmo code",
    wind_speed_10m = "km/h"
)
val mockWeather = WeatherDto(
    latitude = 52.0,
    longitude = 23.372,
    generationtime_ms = 0.0380277633666992,
    utc_offset_seconds = 7200,
    timezone = "Europe/Warsaw",
    timezone_abbreviation = "CEST",
    elevation = 146,
    current = mockCurrent,
    current_units = mockCurrentUnits,
    daily = mockDaily,
    daily_units = mockDailyUnits,
    hourly = mockHourly,
    hourly_units = mockHourlyUnits
)

const val mockCurrentLocalDateTime: String = "2024-06-23T03:01"

